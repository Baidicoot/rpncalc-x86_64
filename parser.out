Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement statements
Rule 2     statements -> <empty>
Rule 3     statement -> PUSH expression
Rule 4     statement -> POPEN IDENT DEFN statements PCLOSE
Rule 5     statement -> POPEN IDENT DEFN identifiers ARR statements PCLOSE
Rule 6     statement -> expression
Rule 7     expression -> INT
Rule 8     expression -> STR
Rule 9     expression -> IDENT
Rule 10    expression -> POPEN identifiers ARR statements PCLOSE
Rule 11    identifiers -> IDENT identifiers
Rule 12    identifiers -> <empty>

Terminals, with rules where they appear

ARR                  : 5 10
DEFN                 : 4 5
IDENT                : 4 5 9 11
INT                  : 7
PCLOSE               : 4 5 10
POPEN                : 4 5 10
PUSH                 : 3
STR                  : 8
error                : 

Nonterminals, with rules where they appear

expression           : 3 6
identifiers          : 5 10 11
statement            : 1
statements           : 1 4 5 10 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement statements
    (2) statements -> .
    (3) statement -> . PUSH expression
    (4) statement -> . POPEN IDENT DEFN statements PCLOSE
    (5) statement -> . POPEN IDENT DEFN identifiers ARR statements PCLOSE
    (6) statement -> . expression
    (7) expression -> . INT
    (8) expression -> . STR
    (9) expression -> . IDENT
    (10) expression -> . POPEN identifiers ARR statements PCLOSE

    $end            reduce using rule 2 (statements -> .)
    PUSH            shift and go to state 3
    POPEN           shift and go to state 5
    INT             shift and go to state 7
    STR             shift and go to state 8
    IDENT           shift and go to state 6

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 4

state 1

    (0) S' -> statements .



state 2

    (1) statements -> statement . statements
    (1) statements -> . statement statements
    (2) statements -> .
    (3) statement -> . PUSH expression
    (4) statement -> . POPEN IDENT DEFN statements PCLOSE
    (5) statement -> . POPEN IDENT DEFN identifiers ARR statements PCLOSE
    (6) statement -> . expression
    (7) expression -> . INT
    (8) expression -> . STR
    (9) expression -> . IDENT
    (10) expression -> . POPEN identifiers ARR statements PCLOSE

    $end            reduce using rule 2 (statements -> .)
    PCLOSE          reduce using rule 2 (statements -> .)
    PUSH            shift and go to state 3
    POPEN           shift and go to state 5
    INT             shift and go to state 7
    STR             shift and go to state 8
    IDENT           shift and go to state 6

    statement                      shift and go to state 2
    statements                     shift and go to state 9
    expression                     shift and go to state 4

state 3

    (3) statement -> PUSH . expression
    (7) expression -> . INT
    (8) expression -> . STR
    (9) expression -> . IDENT
    (10) expression -> . POPEN identifiers ARR statements PCLOSE

    INT             shift and go to state 7
    STR             shift and go to state 8
    IDENT           shift and go to state 6
    POPEN           shift and go to state 11

    expression                     shift and go to state 10

state 4

    (6) statement -> expression .

    PUSH            reduce using rule 6 (statement -> expression .)
    POPEN           reduce using rule 6 (statement -> expression .)
    INT             reduce using rule 6 (statement -> expression .)
    STR             reduce using rule 6 (statement -> expression .)
    IDENT           reduce using rule 6 (statement -> expression .)
    $end            reduce using rule 6 (statement -> expression .)
    PCLOSE          reduce using rule 6 (statement -> expression .)


state 5

    (4) statement -> POPEN . IDENT DEFN statements PCLOSE
    (5) statement -> POPEN . IDENT DEFN identifiers ARR statements PCLOSE
    (10) expression -> POPEN . identifiers ARR statements PCLOSE
    (11) identifiers -> . IDENT identifiers
    (12) identifiers -> .

    IDENT           shift and go to state 12
    ARR             reduce using rule 12 (identifiers -> .)

    identifiers                    shift and go to state 13

state 6

    (9) expression -> IDENT .

    PUSH            reduce using rule 9 (expression -> IDENT .)
    POPEN           reduce using rule 9 (expression -> IDENT .)
    INT             reduce using rule 9 (expression -> IDENT .)
    STR             reduce using rule 9 (expression -> IDENT .)
    IDENT           reduce using rule 9 (expression -> IDENT .)
    $end            reduce using rule 9 (expression -> IDENT .)
    PCLOSE          reduce using rule 9 (expression -> IDENT .)


state 7

    (7) expression -> INT .

    PUSH            reduce using rule 7 (expression -> INT .)
    POPEN           reduce using rule 7 (expression -> INT .)
    INT             reduce using rule 7 (expression -> INT .)
    STR             reduce using rule 7 (expression -> INT .)
    IDENT           reduce using rule 7 (expression -> INT .)
    $end            reduce using rule 7 (expression -> INT .)
    PCLOSE          reduce using rule 7 (expression -> INT .)


state 8

    (8) expression -> STR .

    PUSH            reduce using rule 8 (expression -> STR .)
    POPEN           reduce using rule 8 (expression -> STR .)
    INT             reduce using rule 8 (expression -> STR .)
    STR             reduce using rule 8 (expression -> STR .)
    IDENT           reduce using rule 8 (expression -> STR .)
    $end            reduce using rule 8 (expression -> STR .)
    PCLOSE          reduce using rule 8 (expression -> STR .)


state 9

    (1) statements -> statement statements .

    $end            reduce using rule 1 (statements -> statement statements .)
    PCLOSE          reduce using rule 1 (statements -> statement statements .)


state 10

    (3) statement -> PUSH expression .

    PUSH            reduce using rule 3 (statement -> PUSH expression .)
    POPEN           reduce using rule 3 (statement -> PUSH expression .)
    INT             reduce using rule 3 (statement -> PUSH expression .)
    STR             reduce using rule 3 (statement -> PUSH expression .)
    IDENT           reduce using rule 3 (statement -> PUSH expression .)
    $end            reduce using rule 3 (statement -> PUSH expression .)
    PCLOSE          reduce using rule 3 (statement -> PUSH expression .)


state 11

    (10) expression -> POPEN . identifiers ARR statements PCLOSE
    (11) identifiers -> . IDENT identifiers
    (12) identifiers -> .

    IDENT           shift and go to state 14
    ARR             reduce using rule 12 (identifiers -> .)

    identifiers                    shift and go to state 13

state 12

    (4) statement -> POPEN IDENT . DEFN statements PCLOSE
    (5) statement -> POPEN IDENT . DEFN identifiers ARR statements PCLOSE
    (11) identifiers -> IDENT . identifiers
    (11) identifiers -> . IDENT identifiers
    (12) identifiers -> .

    DEFN            shift and go to state 15
    IDENT           shift and go to state 14
    ARR             reduce using rule 12 (identifiers -> .)

    identifiers                    shift and go to state 16

state 13

    (10) expression -> POPEN identifiers . ARR statements PCLOSE

    ARR             shift and go to state 17


state 14

    (11) identifiers -> IDENT . identifiers
    (11) identifiers -> . IDENT identifiers
    (12) identifiers -> .

    IDENT           shift and go to state 14
    ARR             reduce using rule 12 (identifiers -> .)

    identifiers                    shift and go to state 16

state 15

    (4) statement -> POPEN IDENT DEFN . statements PCLOSE
    (5) statement -> POPEN IDENT DEFN . identifiers ARR statements PCLOSE
    (1) statements -> . statement statements
    (2) statements -> .
    (11) identifiers -> . IDENT identifiers
    (12) identifiers -> .
    (3) statement -> . PUSH expression
    (4) statement -> . POPEN IDENT DEFN statements PCLOSE
    (5) statement -> . POPEN IDENT DEFN identifiers ARR statements PCLOSE
    (6) statement -> . expression
    (7) expression -> . INT
    (8) expression -> . STR
    (9) expression -> . IDENT
    (10) expression -> . POPEN identifiers ARR statements PCLOSE

    PCLOSE          reduce using rule 2 (statements -> .)
    IDENT           shift and go to state 18
    ARR             reduce using rule 12 (identifiers -> .)
    PUSH            shift and go to state 3
    POPEN           shift and go to state 5
    INT             shift and go to state 7
    STR             shift and go to state 8

    statements                     shift and go to state 19
    identifiers                    shift and go to state 20
    statement                      shift and go to state 2
    expression                     shift and go to state 4

state 16

    (11) identifiers -> IDENT identifiers .

    ARR             reduce using rule 11 (identifiers -> IDENT identifiers .)


state 17

    (10) expression -> POPEN identifiers ARR . statements PCLOSE
    (1) statements -> . statement statements
    (2) statements -> .
    (3) statement -> . PUSH expression
    (4) statement -> . POPEN IDENT DEFN statements PCLOSE
    (5) statement -> . POPEN IDENT DEFN identifiers ARR statements PCLOSE
    (6) statement -> . expression
    (7) expression -> . INT
    (8) expression -> . STR
    (9) expression -> . IDENT
    (10) expression -> . POPEN identifiers ARR statements PCLOSE

    PCLOSE          reduce using rule 2 (statements -> .)
    PUSH            shift and go to state 3
    POPEN           shift and go to state 5
    INT             shift and go to state 7
    STR             shift and go to state 8
    IDENT           shift and go to state 6

    statements                     shift and go to state 21
    statement                      shift and go to state 2
    expression                     shift and go to state 4

state 18

    (11) identifiers -> IDENT . identifiers
    (9) expression -> IDENT .
    (11) identifiers -> . IDENT identifiers
    (12) identifiers -> .

  ! shift/reduce conflict for IDENT resolved as shift
    PUSH            reduce using rule 9 (expression -> IDENT .)
    POPEN           reduce using rule 9 (expression -> IDENT .)
    INT             reduce using rule 9 (expression -> IDENT .)
    STR             reduce using rule 9 (expression -> IDENT .)
    PCLOSE          reduce using rule 9 (expression -> IDENT .)
    IDENT           shift and go to state 14
    ARR             reduce using rule 12 (identifiers -> .)

  ! IDENT           [ reduce using rule 9 (expression -> IDENT .) ]

    identifiers                    shift and go to state 16

state 19

    (4) statement -> POPEN IDENT DEFN statements . PCLOSE

    PCLOSE          shift and go to state 22


state 20

    (5) statement -> POPEN IDENT DEFN identifiers . ARR statements PCLOSE

    ARR             shift and go to state 23


state 21

    (10) expression -> POPEN identifiers ARR statements . PCLOSE

    PCLOSE          shift and go to state 24


state 22

    (4) statement -> POPEN IDENT DEFN statements PCLOSE .

    PUSH            reduce using rule 4 (statement -> POPEN IDENT DEFN statements PCLOSE .)
    POPEN           reduce using rule 4 (statement -> POPEN IDENT DEFN statements PCLOSE .)
    INT             reduce using rule 4 (statement -> POPEN IDENT DEFN statements PCLOSE .)
    STR             reduce using rule 4 (statement -> POPEN IDENT DEFN statements PCLOSE .)
    IDENT           reduce using rule 4 (statement -> POPEN IDENT DEFN statements PCLOSE .)
    $end            reduce using rule 4 (statement -> POPEN IDENT DEFN statements PCLOSE .)
    PCLOSE          reduce using rule 4 (statement -> POPEN IDENT DEFN statements PCLOSE .)


state 23

    (5) statement -> POPEN IDENT DEFN identifiers ARR . statements PCLOSE
    (1) statements -> . statement statements
    (2) statements -> .
    (3) statement -> . PUSH expression
    (4) statement -> . POPEN IDENT DEFN statements PCLOSE
    (5) statement -> . POPEN IDENT DEFN identifiers ARR statements PCLOSE
    (6) statement -> . expression
    (7) expression -> . INT
    (8) expression -> . STR
    (9) expression -> . IDENT
    (10) expression -> . POPEN identifiers ARR statements PCLOSE

    PCLOSE          reduce using rule 2 (statements -> .)
    PUSH            shift and go to state 3
    POPEN           shift and go to state 5
    INT             shift and go to state 7
    STR             shift and go to state 8
    IDENT           shift and go to state 6

    statements                     shift and go to state 25
    statement                      shift and go to state 2
    expression                     shift and go to state 4

state 24

    (10) expression -> POPEN identifiers ARR statements PCLOSE .

    PUSH            reduce using rule 10 (expression -> POPEN identifiers ARR statements PCLOSE .)
    POPEN           reduce using rule 10 (expression -> POPEN identifiers ARR statements PCLOSE .)
    INT             reduce using rule 10 (expression -> POPEN identifiers ARR statements PCLOSE .)
    STR             reduce using rule 10 (expression -> POPEN identifiers ARR statements PCLOSE .)
    IDENT           reduce using rule 10 (expression -> POPEN identifiers ARR statements PCLOSE .)
    $end            reduce using rule 10 (expression -> POPEN identifiers ARR statements PCLOSE .)
    PCLOSE          reduce using rule 10 (expression -> POPEN identifiers ARR statements PCLOSE .)


state 25

    (5) statement -> POPEN IDENT DEFN identifiers ARR statements . PCLOSE

    PCLOSE          shift and go to state 26


state 26

    (5) statement -> POPEN IDENT DEFN identifiers ARR statements PCLOSE .

    PUSH            reduce using rule 5 (statement -> POPEN IDENT DEFN identifiers ARR statements PCLOSE .)
    POPEN           reduce using rule 5 (statement -> POPEN IDENT DEFN identifiers ARR statements PCLOSE .)
    INT             reduce using rule 5 (statement -> POPEN IDENT DEFN identifiers ARR statements PCLOSE .)
    STR             reduce using rule 5 (statement -> POPEN IDENT DEFN identifiers ARR statements PCLOSE .)
    IDENT           reduce using rule 5 (statement -> POPEN IDENT DEFN identifiers ARR statements PCLOSE .)
    $end            reduce using rule 5 (statement -> POPEN IDENT DEFN identifiers ARR statements PCLOSE .)
    PCLOSE          reduce using rule 5 (statement -> POPEN IDENT DEFN identifiers ARR statements PCLOSE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENT in state 18 resolved as shift
