(# library list #)
(# include list #)
(# include bool #)
(# include arith #)

(export <$>; list fn ->
    []
    '(-> list \
        (xs x -> xs 'fn <$> x fn :))
    list []? ?:)

(export !!; list index ->
    list \ (xs x ->
        x
        '(->xs index 1 - !!)
        index 0 == ?:))

(export <+; list acc fn ->
    acc
    '(-> list \
        (xs x -> xs x acc fn 'fn <+))
    list []? ?:)

(export +>; list acc fn ->
    acc
    '(-> list \
        (xs x -> xs acc 'fn +> x fn))
    list []? ?:)

(export sum; xs -> xs 0 '+ <+)

(export prod; xs -> xs 0 '* <+)

(export v; !!)

(export map; <$>)